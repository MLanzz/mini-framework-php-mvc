document.addEventListener("DOMContentLoaded",()=>{initApp()});const initApp=()=>{setDetailsButtons(),setDeleteButtons()},setDetailsButtons=()=>{document.querySelectorAll("[name='detailsButton']").forEach(t=>{t.addEventListener("click",t=>{const e=t.target;e.classList.toggle("rotate");const n=e.dataset.idAppointment;e.classList.contains("rotate")?showAppointmentDetails(n):hideServices(n)})})},setDeleteButtons=()=>{document.querySelectorAll("[name='deleteButton']").forEach(t=>{t.addEventListener("click",t=>{const e=t.target.getAttribute("appointmentId");showDeleteDialog(e)})})},showAppointmentDetails=async t=>{if(document.querySelector(`[servicesAppointmentId="${t}"]`))return void(document.querySelector(`[servicesAppointmentId="${t}"]`).style.display="table-row");displayLoading(t);const e=new FormData;e.append("appointmentId",t);try{const n=await fetch("/api/getAppointmentDetails",{method:"POST",body:e}),o=await n.json();if(o.appointmentServices.length>0){const{appointmentServices:e}=o;document.querySelector(".trLoading").remove(),createServicesTables(e,t)}else console.log("No hay servicios")}catch(t){console.error(t)}},hideServices=t=>{document.querySelector(`[servicesAppointmentId="${t}"]`).style.display="none"},createServicesTables=(t,e)=>{let n=`\n        <tr servicesAppointmentId="${e}">\n            <td></td>\n            <td colspan="3" style="padding: 0 0 1rem 0;">\n                <table style="width: 100%;" cellspacing="0">\n                    <thead>\n                        <th>#</th>\n                        <th>Servicio</th>\n                        <th>Precio</th>\n                    </thead>\n                    <tbody>\n                        #servicesRows\n                    </tbody>\n                </table>\n            </td>\n            <td></td>\n            <td></td>\n            <td></td>\n        </tr>\n    `,o="";t.forEach(t=>{const{id:e,serviceName:n,price:i}=t;o+=`\n            <tr>\n                <td>${e}</td>\n                <td>${n}</td>\n                <td>$ ${i}</td>\n            </tr>\n        `}),n=n.replace("#servicesRows",o);document.querySelector(`[appointmentId='${e}']`).insertAdjacentHTML("afterend",n)},displayLoading=t=>{document.querySelector(`[appointmentId='${t}']`).insertAdjacentHTML("afterend",'\n        <tr class="trLoading">\n            <td colspan="7">\n                <div class="loading"></div>\n            </td>\n        </tr>\n    ')},showDeleteDialog=t=>{Swal.fire({title:`¿Desea borrar la cita #${t}?`,showCancelButton:!0,cancelButtonText:"Cancelar",confirmButtonText:"Eliminar",showLoaderOnConfirm:!0,preConfirm:()=>deleteAppointment(t),allowOutsideClick:!1})},deleteAppointment=async t=>{const e=new FormData;e.append("appointmentId",t);try{const t=await fetch("/api/deleteAppointment",{method:"POST",body:e});(await t.json()).result&&Swal.fire({icon:"success",title:"Cita eliminada",text:"¡Cita eliminada correctamente!"}).then(()=>{window.location.reload()})}catch(t){Swal.fire({icon:"error",title:"Error",text:"Ocurrió un error elimiando la cita"})}};